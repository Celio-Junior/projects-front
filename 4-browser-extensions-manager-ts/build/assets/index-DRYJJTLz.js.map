{"version":3,"file":"index-DRYJJTLz.js","sources":["../../src/elements/header-logo.ts","../../src/elements/button-thema.ts","../../src/elements/index.ts","../../src/elements/extension.ts","../../src/main.ts"],"sourcesContent":["//paths\nexport const pathLogo = './images/logo.svg';\n\n//elements\nconst logoElement = document.querySelector<HTMLHeadingElement>('#logo');\n\nlet logoWhiteString: string | null = null;\n\nexport const loaderSvg = async (path: string, isLight: boolean = false) => {\n  if (!logoElement) return;\n  const reponse = await fetch(path);\n  let svgString = (await reponse.text()).trim();\n\n  if (!logoWhiteString) {\n    logoWhiteString = svgString.replace('fill=\"#091540', 'fill=\"#eee\"');\n  }\n\n  if (isLight) svgString = logoWhiteString;\n\n  logoElement.innerHTML = svgString;\n};\n\nloaderSvg(pathLogo, true);\n","import { pathLogo, loaderSvg } from './header-logo';\n\n//Elements\nconst buttonThemaElement = document.querySelector<HTMLButtonElement>('#button-thema');\nconst iconsThemaElement = buttonThemaElement?.querySelectorAll(\n  'img',\n) as NodeListOf<HTMLImageElement>;\n\nconst body = document.body;\n\nconst clickThema = () => {\n  if (body.classList.contains('dark')) {\n    body.classList.remove('dark');\n    body.classList.add('light');\n\n    //muda logo\n    loaderSvg(pathLogo, false);\n\n    //icon thema\n    iconThema('dark');\n  } else {\n    body.classList.remove('light');\n    body.classList.add('dark');\n\n    //muda logo\n    loaderSvg(pathLogo, true);\n\n    //icon thema\n    iconThema('light');\n  }\n};\n\n//talvez eu mudo criando classes\nfunction iconThema(thema: 'dark' | 'light') {\n  if (thema === 'dark') {\n    iconsThemaElement[0].style.display = 'none';\n    iconsThemaElement[1].style.display = 'inline';\n    return;\n  }\n  if (thema === 'light') {\n    iconsThemaElement[0].style.display = 'inline';\n    iconsThemaElement[1].style.display = 'none';\n  }\n}\n\nbuttonThemaElement?.addEventListener('click', clickThema);\n","import { ExtensionInterface } from '../interfaces/extension';\n\nexport const dataExtensions = (async function (): Promise<ExtensionInterface[]> {\n  // const pathDB = './src/database/data.json';\n  const pathDB = './database/data.json';\n  const response = await fetch(pathDB);\n  const result = await response.json();\n  return result;\n})();\n","import { ExtensionInterface } from '../interfaces/extension';\n\nexport const extensionTemplateElement = (extension: ExtensionInterface) => {\n  const { name, description, logo: pathIMg, isActive } = extension;\n  return `\n        <div class=\"box-header\">\n        <img src=${pathIMg} alt=\"logo devlens\">\n\n        <div class=\"box-text\">\n          <h3>${name}</h3>\n  \n          <p>${description}</p>\n        </div>\n      </div>\n\n      <div class=\"nav-input-extension\">\n        <input data-active=${isActive} type=\"checkbox\">\n        <button type=\"button\" class=\"button button-remove\">Remove</button>\n        <button type=\"button\" class=\"extension-active\"></button>\n      </div>`;\n};\n","// imports css\nimport '@styles/global.css';\nimport '@styles/header.css';\nimport '@styles/main.css';\n// loader logo svg\nimport './elements/header-logo';\n//button thema\nimport './elements/button-thema';\nimport { dataExtensions } from './elements';\nimport { extensionTemplateElement } from './elements/extension';\n\n(async function () {\n  const extensionContainerElement =\n    document.querySelector<HTMLDivElement>('#container-extensions');\n\n  const buttonsNavigation = document.querySelectorAll<HTMLButtonElement>(\n    '.navigation button[type=\"button\"]',\n  );\n\n  if (!extensionContainerElement) return;\n  const data = await dataExtensions;\n\n  // parte de carrega e dos input ativado ta pronto(eu acho)\n  data.forEach((extension) => {\n    const boxElement = document.createElement('div');\n    boxElement.classList.add('box-extension');\n    boxElement.innerHTML = extensionTemplateElement(extension);\n\n    const inputCheckBox = boxElement.querySelector(\n      'input[type=\"checkbox\"]',\n    ) as HTMLInputElement;\n    const buttonIsActive = boxElement.querySelector('.extension-active') as HTMLButtonElement;\n    const buttonRemove = boxElement.querySelector('.button-remove') as HTMLButtonElement;\n\n    buttonChecked(inputCheckBox);\n    buttonClick(inputCheckBox, buttonIsActive);\n    removeExtension(boxElement, buttonRemove);\n    extensionContainerElement.append(boxElement);\n  });\n\n  const allExtensionElement =\n    extensionContainerElement.querySelectorAll<HTMLDivElement>('.box-extension');\n\n  navigationSelect(buttonsNavigation, allExtensionElement);\n  console.log('main file');\n})();\n\nfunction removeExtension(elementRemove: HTMLDivElement, button: HTMLButtonElement) {\n  button.addEventListener('click', () => elementRemove.remove());\n}\n\nfunction buttonChecked(inputCheckBox: HTMLInputElement) {\n  const check = inputCheckBox.getAttribute('data-active') === 'true';\n  inputCheckBox.checked = check;\n}\n\nfunction buttonClick(inputCheckBox: HTMLInputElement, span: HTMLSpanElement) {\n  span.addEventListener('click', () => {\n    const checked = inputCheckBox.getAttribute('data-active') === 'true';\n    inputCheckBox.setAttribute('data-active', `${!checked}`);\n    buttonChecked(inputCheckBox);\n  });\n}\n\nfunction navigationSelect(\n  buttons: NodeListOf<HTMLButtonElement>,\n  allExtension: NodeListOf<HTMLDivElement>,\n) {\n  buttons.forEach((button, i) => {\n    button.addEventListener('click', () => {\n      buttonNavigationStyle(buttons, i);\n\n      if (button.id === 'button-all') {\n        allExtension.forEach((elementMain) => (elementMain.style.display = 'flex'));\n      }\n\n      if (button.id === 'button-active') {\n        allExtension.forEach((elementMain) => {\n          const checkElement = elementMain.querySelector<HTMLInputElement>(\n            'input[type=\"checkbox\"]',\n          );\n          if (!checkElement) return;\n\n          if (checkElement.checked) {\n            elementMain.style.display = 'flex';\n          } else {\n            elementMain.style.display = 'none';\n          }\n        });\n      }\n\n      if (button.id === 'button-inactive') {\n        allExtension.forEach((elementMain) => {\n          const checkElement = elementMain.querySelector<HTMLInputElement>(\n            'input[type=\"checkbox\"]',\n          );\n          if (!checkElement) return;\n\n          if (!checkElement.checked) {\n            elementMain.style.display = 'flex';\n          } else {\n            elementMain.style.display = 'none';\n          }\n        });\n      }\n    });\n  });\n}\n\nfunction buttonNavigationStyle(buttons: NodeListOf<HTMLButtonElement>, indice: number) {\n  buttons.forEach((button, i) => {\n    if (i === indice) button.classList.add('active');\n    if (i !== indice && button.classList.contains('active'))\n      return button.classList.remove('active');\n  });\n}\n"],"names":["pathLogo","logoElement","logoWhiteString","loaderSvg","path","isLight","svgString","buttonThemaElement","iconsThemaElement","body","clickThema","iconThema","thema","dataExtensions","extensionTemplateElement","extension","name","description","pathIMg","isActive","extensionContainerElement","buttonsNavigation","boxElement","inputCheckBox","buttonIsActive","buttonRemove","buttonChecked","buttonClick","removeExtension","allExtensionElement","navigationSelect","elementRemove","button","check","span","checked","buttons","allExtension","i","buttonNavigationStyle","elementMain","checkElement","indice"],"mappings":"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"}